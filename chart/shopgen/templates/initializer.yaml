apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-initializer"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: initializer
        image: "{{ .Values.image.repository}}:{{ .Values.image.tag }}"
        command:
          - "bash"
          - "-c"
          - "python3 manage.py migrate && python3 manage.py runscript initializer"
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: password
          - name: POSTGRES_SERVER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: host
          - name: POSTGRES_DATABASE
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: database
          - name: POSTGRES_PORT
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: port